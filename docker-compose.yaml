#https://raw.githubusercontent.com/confluentinc/cp-all-in-one/6.0.1-post/cp-all-in-one/docker-compose.yml

---
version: '3.4'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.0.1
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    network_mode: host
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:6.0.1
    hostname: broker
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    network_mode: host
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: localhost:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  order-receiver-db:
    image: postgres:13.3
    container_name: order-receiver-db
    volumes:
      - ./docker/order-receiver-setup-db.sh:/docker-entrypoint-initdb.d/setup-db.sh
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"  
  
  order-processor-db:
    image: postgres:13.3
    container_name: order-processor-db
    volumes:
      - ./docker/order-processor-setup-db.sh:/docker-entrypoint-initdb.d/setup-db.sh
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"    

  payments-db:
    image: postgres:13.3
    container_name: payments-db
    volumes:
      - ./docker/payments-setup-db.sh:/docker-entrypoint-initdb.d/setup-db.sh
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"

  stock-db:
    image: postgres:13.3
    container_name: stock-db
    volumes:
      - ./docker/stock-setup-db.sh:/docker-entrypoint-initdb.d/setup-db.sh
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5435:5432"
  
  logistics-db:
    image: postgres:13.3
    container_name: logistics-db
    volumes:
      - ./docker/logistics-setup-db.sh:/docker-entrypoint-initdb.d/setup-db.sh
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5436:5432"    
  
  product-viewer-db:
    image: postgres:13.3
    container_name: product-viewer-db
    volumes:
      - ./docker/product-viewer-setup-db.sh:/docker-entrypoint-initdb.d/setup-db.sh
    environment:
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5437:5432"    
        
      
